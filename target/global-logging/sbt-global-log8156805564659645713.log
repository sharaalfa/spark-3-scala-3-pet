[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.9 (Private Build Java 17.0.10)
[debug]       Load.loadUnit: plugins took 56.551751ms
[debug]       Load.loadUnit: defsScala took 0.316334ms
[debug] [Loading] Scanning directory /home/shar/.sbt/1.0/plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /home/shar/.sbt/1.0/plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 10.481797 ms
[debug]           Load.resolveProject(global-plugins) took 27.494665ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: /home/shar/.sbt/1.0/plugins, plugins: List(<none>))) took 49.196472ms
[debug] [Loading] Done in /home/shar/.sbt/1.0/plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 68.040269ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.1085ms
[debug]     Load.loadUnit(file:/home/shar/.sbt/1.0/plugins/, ...) took 131.815168ms
[debug]   Load.apply: load took 239.061439ms
[debug]   Load.apply: resolveProjects took 3.833503ms
[debug]   Load.apply: finalTransforms took 26.382281ms
[debug]   Load.apply: config.delegates took 3.150405ms
[debug]   Load.apply: Def.make(settings)... took 197.553025ms
[debug]   Load.apply: structureIndex took 61.02373ms
[debug]   Load.apply: mkStreams took 0.969778ms
[info] loading global plugins from /home/shar/.sbt/1.0/plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 1130.709394ms
[debug]           Load.loadUnit: plugins took 6.114742ms
[debug]           Load.loadUnit: defsScala took 0.002181ms
[debug] [Loading] Scanning directory /home/shar/ssp/spark-3-scala-3-pet/project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /home/shar/ssp/spark-3-scala-3-pet/project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 0.911202 ms
[debug]               Load.resolveProject(spark-3-scala-3-pet-build) took 0.668258ms
[debug]             Load.loadTransitive: finalizeProject(Project(id spark-3-scala-3-pet-build, base: /home/shar/ssp/spark-3-scala-3-pet/project, plugins: List(<none>))) took 1.848061ms
[debug] [Loading] Done in /home/shar/ssp/spark-3-scala-3-pet/project, returning: (spark-3-scala-3-pet-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2.865195ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.006636ms
[debug]         Load.loadUnit(file:/home/shar/ssp/spark-3-scala-3-pet/project/, ...) took 9.326321ms
[debug]       Load.apply: load took 9.937135ms
[debug]       Load.apply: resolveProjects took 0.0688ms
[debug]       Load.apply: finalTransforms took 4.319924ms
[debug]       Load.apply: config.delegates took 0.183649ms
[debug]       Load.apply: Def.make(settings)... took 47.682957ms
[debug]       Load.apply: structureIndex took 28.746543ms
[debug]       Load.apply: mkStreams took 0.003656ms
[info] loading project definition from /home/shar/ssp/spark-3-scala-3-pet/project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 289.569982ms
[debug]     Load.loadUnit: defsScala took 0.003713ms
[debug] [Loading] Scanning directory /home/shar/ssp/spark-3-scala-3-pet
[debug]       Load.loadUnit: mkEval took 2.277031ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.058337 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 1.271009ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: /home/shar/ssp/spark-3-scala-3-pet, plugins: List(<none>))) took 2.859009ms
[debug] [Loading] Done in /home/shar/ssp/spark-3-scala-3-pet, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 70.761762ms
[debug]     Load.loadUnit: cleanEvalClasses took 2.507464ms
[debug]   Load.loadUnit(file:/home/shar/ssp/spark-3-scala-3-pet/, ...) took 363.428923ms
[debug] Load.apply: load took 364.49043ms
[debug] Load.apply: resolveProjects took 0.080316ms
[debug] Load.apply: finalTransforms took 3.94375ms
[debug] Load.apply: config.delegates took 0.20831ms
[debug] Load.apply: Def.make(settings)... took 33.097529ms
[debug] Load.apply: structureIndex took 17.247539ms
[debug] Load.apply: mkStreams took 0.002258ms
[info] set current project to spark-3-scala-3-pet (in build file:/home/shar/ssp/spark-3-scala-3-pet/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:///home/shar/.sbt/1.0/server/08efdcf998bc1d56c433/sock
[debug] Writing bsp connection file
[info] started sbt server
